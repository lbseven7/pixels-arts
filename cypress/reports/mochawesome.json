{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 31,
    "pending": 0,
    "failures": 10,
    "start": "2022-02-23T14:27:59.947Z",
    "end": "2022-02-23T14:29:02.089Z",
    "duration": 62142,
    "testsRegistered": 41,
    "passPercent": 75.60975609756098,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "eed833ee-15d4-4969-b3a4-030bbdcb6a05",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2814311-a68b-41f7-a536-caa33ff3a98b",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "1ace8b24-0d12-4aa3-a32c-c1fc70088608",
              "parentUUID": "a2814311-a68b-41f7-a536-caa33ff3a98b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ace8b24-0d12-4aa3-a32c-c1fc70088608"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fa927074-4aaf-4697-8edb-963861286fad",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "ed58c625-5730-4db0-9c4f-f16fb2dcf7ea",
              "parentUUID": "fa927074-4aaf-4697-8edb-963861286fad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "78f465ec-a69c-4a79-8c6a-a67b2aeb6e40",
              "parentUUID": "fa927074-4aaf-4697-8edb-963861286fad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "58d035bc-de44-454b-9d80-9b975ff1dd40",
              "parentUUID": "fa927074-4aaf-4697-8edb-963861286fad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 4373,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.color.selected>' to have CSS property 'border' with the value '1px solid rgb(0, 0, 0)', but the value was '1px solid rgb(252, 250, 250)'",
                "estack": "CypressError: Timed out retrying: expected '<div.color.selected>' to have CSS property 'border' with the value '1px solid rgb(0, 0, 0)', but the value was '1px solid rgb(252, 250, 250)'\n    at cypressErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9a4128fb-d9ff-4f16-acdb-093d1805639d",
              "parentUUID": "fa927074-4aaf-4697-8edb-963861286fad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "a4e6bdbb-b802-404a-af9c-e3c82d2113a3",
              "parentUUID": "fa927074-4aaf-4697-8edb-963861286fad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "7982c587-2b5f-4b87-a198-abad8fb994f9",
              "parentUUID": "fa927074-4aaf-4697-8edb-963861286fad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "72e3232c-47a2-4558-a723-ab594f1d27b2",
              "parentUUID": "fa927074-4aaf-4697-8edb-963861286fad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed58c625-5730-4db0-9c4f-f16fb2dcf7ea",
            "78f465ec-a69c-4a79-8c6a-a67b2aeb6e40",
            "58d035bc-de44-454b-9d80-9b975ff1dd40",
            "a4e6bdbb-b802-404a-af9c-e3c82d2113a3",
            "7982c587-2b5f-4b87-a198-abad8fb994f9",
            "72e3232c-47a2-4558-a723-ab594f1d27b2"
          ],
          "failures": [
            "9a4128fb-d9ff-4f16-acdb-093d1805639d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5909,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d7769c61-6651-4949-8a45-3ec0ba4c8d53",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b71194a0-ec4b-4cd9-9cef-5ad69ae8f13c",
              "parentUUID": "d7769c61-6651-4949-8a45-3ec0ba4c8d53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "305ee853-45a4-46e5-82ca-094335f9d49f",
              "parentUUID": "d7769c61-6651-4949-8a45-3ec0ba4c8d53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b71194a0-ec4b-4cd9-9cef-5ad69ae8f13c",
            "305ee853-45a4-46e5-82ca-094335f9d49f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 452,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eaf66f27-af90-4a8a-970e-70bb68cd48e2",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "960f5a46-8c05-453e-af0e-fce6596e7d76",
              "parentUUID": "eaf66f27-af90-4a8a-970e-70bb68cd48e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "4407cf93-3264-4434-a75b-1b562491873c",
              "parentUUID": "eaf66f27-af90-4a8a-970e-70bb68cd48e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "277bb94b-6fa4-4dda-9700-1c2606f3b160",
              "parentUUID": "eaf66f27-af90-4a8a-970e-70bb68cd48e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "4b08c786-6026-4799-845f-03499061b034",
              "parentUUID": "eaf66f27-af90-4a8a-970e-70bb68cd48e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "960f5a46-8c05-453e-af0e-fce6596e7d76",
            "4407cf93-3264-4434-a75b-1b562491873c",
            "277bb94b-6fa4-4dda-9700-1c2606f3b160",
            "4b08c786-6026-4799-845f-03499061b034"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8b0f3c4-ae5c-4803-9663-7b1c10d4b687",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 565,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\"></div>",
                "estack": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\"></div>\n    at http://localhost:44735/__cypress/runner/cypress_runner.js:136161:17\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44735/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.shouldFnWithCallback (http://localhost:44735/__cypress/runner/cypress_runner.js:136158:23)\n    at Context.shouldFn (http://localhost:44735/__cypress/runner/cypress_runner.js:136167:35)\n    at Context.and (http://localhost:44735/__cypress/runner/cypress_runner.js:136265:23)\n    at Context.<anonymous> (http://localhost:44735/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44735/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44735/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "389180a3-c0be-41c7-aec3-3716f9bb939c",
              "parentUUID": "e8b0f3c4-ae5c-4803-9663-7b1c10d4b687",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "2db06a57-3419-47e8-9756-998b6219943f",
              "parentUUID": "e8b0f3c4-ae5c-4803-9663-7b1c10d4b687",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2db06a57-3419-47e8-9756-998b6219943f"
          ],
          "failures": [
            "389180a3-c0be-41c7-aec3-3716f9bb939c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1060,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb1b3af2-0961-49f6-ae8d-f1d737ff89cc",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b1df8ecb-85f3-4d61-aa91-36880cb0a0f2",
              "parentUUID": "fb1b3af2-0961-49f6-ae8d-f1d737ff89cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "a07f7184-e988-41a2-84bd-63fcf1e86987",
              "parentUUID": "fb1b3af2-0961-49f6-ae8d-f1d737ff89cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1df8ecb-85f3-4d61-aa91-36880cb0a0f2",
            "a07f7184-e988-41a2-84bd-63fcf1e86987"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 312,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b0fb3724-eefd-4b0a-b70f-6c7467e09346",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 592,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "85350763-f6b0-4d3b-a809-44e7055c8a0c",
              "parentUUID": "b0fb3724-eefd-4b0a-b70f-6c7467e09346",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8814,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "455c63ea-f009-4097-b277-c194dcd23166",
              "parentUUID": "b0fb3724-eefd-4b0a-b70f-6c7467e09346",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85350763-f6b0-4d3b-a809-44e7055c8a0c",
            "455c63ea-f009-4097-b277-c194dcd23166"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6424e7fa-0380-4928-83e3-87a8f2a738b0",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "947fd5fc-3525-4f52-9884-917aba09f1c3",
              "parentUUID": "6424e7fa-0380-4928-83e3-87a8f2a738b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "75bf66b2-923f-41d8-8ef9-d8bc64028d87",
              "parentUUID": "6424e7fa-0380-4928-83e3-87a8f2a738b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "c46cfe06-ed59-4c0b-8986-0631b3d49ffb",
              "parentUUID": "6424e7fa-0380-4928-83e3-87a8f2a738b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "947fd5fc-3525-4f52-9884-917aba09f1c3",
            "75bf66b2-923f-41d8-8ef9-d8bc64028d87",
            "c46cfe06-ed59-4c0b-8986-0631b3d49ffb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12165,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "162c4c47-c8b1-434b-b04d-df3996f7e6b0",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "a3290369-a5dd-431f-ae1a-ea5ae0ab3968",
              "parentUUID": "162c4c47-c8b1-434b-b04d-df3996f7e6b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "5e11d598-480e-4edb-ac13-bdc8bd97d5c7",
              "parentUUID": "162c4c47-c8b1-434b-b04d-df3996f7e6b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "17776a33-e79a-455a-bf2f-9783f0a35543",
              "parentUUID": "162c4c47-c8b1-434b-b04d-df3996f7e6b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2438,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "4b644b78-96ed-41e3-adba-a75f6f7d6a01",
              "parentUUID": "162c4c47-c8b1-434b-b04d-df3996f7e6b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3290369-a5dd-431f-ae1a-ea5ae0ab3968",
            "5e11d598-480e-4edb-ac13-bdc8bd97d5c7",
            "17776a33-e79a-455a-bf2f-9783f0a35543",
            "4b644b78-96ed-41e3-adba-a75f6f7d6a01"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2929,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "38a0f7c0-b398-4e61-9468-3833b9ba6f49",
              "parentUUID": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "861fa5e2-1bc7-4338-98d9-94ca4262dfad",
              "parentUUID": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4391,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1874d016-ab40-4394-aa48-a2345a659dea",
              "parentUUID": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "c20dd88b-9b60-4f11-95e9-c252345899d6",
              "parentUUID": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6a2bc05d-fc18-4742-a972-2aabef7b6621",
              "parentUUID": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "53820897-4164-42e1-b08b-7cc3b81b05d9",
              "parentUUID": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 507,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:44735/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44735/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44735/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44735/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44735/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44735/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44735/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b72c1906-c207-4a66-9efa-f07496b9e178",
              "parentUUID": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4829,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "820e5aae-8b35-446a-a966-03eb52d5a05e",
              "parentUUID": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4914,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0c445b46-558a-487c-8c10-264fdaae8b72",
              "parentUUID": "d73f8a35-da16-4ac0-9fad-82e9548074cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38a0f7c0-b398-4e61-9468-3833b9ba6f49",
            "861fa5e2-1bc7-4338-98d9-94ca4262dfad",
            "c20dd88b-9b60-4f11-95e9-c252345899d6",
            "6a2bc05d-fc18-4742-a972-2aabef7b6621",
            "53820897-4164-42e1-b08b-7cc3b81b05d9"
          ],
          "failures": [
            "1874d016-ab40-4394-aa48-a2345a659dea",
            "b72c1906-c207-4a66-9efa-f07496b9e178",
            "820e5aae-8b35-446a-a966-03eb52d5a05e",
            "0c445b46-558a-487c-8c10-264fdaae8b72"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15691,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da28e1aa-b6de-4817-b801-ae45d680262e",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4826,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d7146ed6-434c-4a3d-93eb-c3fe980f7f0a",
              "parentUUID": "da28e1aa-b6de-4817-b801-ae45d680262e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 638,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "2d9879c7-ac5a-42ff-bab2-c86ef4bcc0b5",
              "parentUUID": "da28e1aa-b6de-4817-b801-ae45d680262e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4736,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44735/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44735/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44735/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44735/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44735/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44735/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5b963966-1f84-48f9-8c8c-91eed8359be9",
              "parentUUID": "da28e1aa-b6de-4817-b801-ae45d680262e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d9879c7-ac5a-42ff-bab2-c86ef4bcc0b5"
          ],
          "failures": [
            "d7146ed6-434c-4a3d-93eb-c3fe980f7f0a",
            "5b963966-1f84-48f9-8c8c-91eed8359be9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10200,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65ba9cac-4848-4c53-a8ef-790675120d0f",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 660,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44735/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44735/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44735/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44735/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44735/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44735/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44735/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "43cec5b1-134c-4a3c-b4b9-aecd14bbfb6f",
              "parentUUID": "65ba9cac-4848-4c53-a8ef-790675120d0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 607,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44735/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44735/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44735/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44735/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44735/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44735/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44735/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44735/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44735/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44735/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44735/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44735/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f8b023ce-d837-4158-aabd-33e499f6a134",
              "parentUUID": "65ba9cac-4848-4c53-a8ef-790675120d0f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "43cec5b1-134c-4a3c-b4b9-aecd14bbfb6f",
            "f8b023ce-d837-4158-aabd-33e499f6a134"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}