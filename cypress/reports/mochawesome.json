{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 31,
    "pending": 0,
    "failures": 10,
    "start": "2022-02-15T22:36:41.206Z",
    "end": "2022-02-15T22:37:38.695Z",
    "duration": 57489,
    "testsRegistered": 41,
    "passPercent": 75.60975609756098,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d0218c9-3fc5-4b1e-89d1-79898e96e020",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb3b3463-b5d2-4418-aafc-54ac6c5d6403",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f1b1e3b9-010c-48e7-a2e9-9cf3e6e60269",
              "parentUUID": "bb3b3463-b5d2-4418-aafc-54ac6c5d6403",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1b1e3b9-010c-48e7-a2e9-9cf3e6e60269"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5d49cd6c-6b63-4a72-ad3c-6be139dcd193",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "b7fdf1c8-6ff8-448e-b4be-50bfd726532c",
              "parentUUID": "5d49cd6c-6b63-4a72-ad3c-6be139dcd193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "0d4204f1-2f49-4cee-8a44-8324613b8023",
              "parentUUID": "5d49cd6c-6b63-4a72-ad3c-6be139dcd193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "d432cbf4-70fc-40d5-8a34-9c2790599b92",
              "parentUUID": "5d49cd6c-6b63-4a72-ad3c-6be139dcd193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 4255,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.color.selected>' to have CSS property 'border' with the value '1px solid rgb(0, 0, 0)', but the value was '1px solid rgb(252, 250, 250)'",
                "estack": "CypressError: Timed out retrying: expected '<div.color.selected>' to have CSS property 'border' with the value '1px solid rgb(0, 0, 0)', but the value was '1px solid rgb(252, 250, 250)'\n    at cypressErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33277/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33277/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33277/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33277/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33277/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9c0e586b-726c-4d1a-bda4-680c931b721d",
              "parentUUID": "5d49cd6c-6b63-4a72-ad3c-6be139dcd193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "8c04f5a8-6608-4b31-b3be-f53ecf9c69e0",
              "parentUUID": "5d49cd6c-6b63-4a72-ad3c-6be139dcd193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "dd1c47a5-c0fb-4417-ba58-3d5124b58909",
              "parentUUID": "5d49cd6c-6b63-4a72-ad3c-6be139dcd193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "150f5ca7-e374-453d-8b83-74548c892f8b",
              "parentUUID": "5d49cd6c-6b63-4a72-ad3c-6be139dcd193",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7fdf1c8-6ff8-448e-b4be-50bfd726532c",
            "0d4204f1-2f49-4cee-8a44-8324613b8023",
            "d432cbf4-70fc-40d5-8a34-9c2790599b92",
            "8c04f5a8-6608-4b31-b3be-f53ecf9c69e0",
            "dd1c47a5-c0fb-4417-ba58-3d5124b58909",
            "150f5ca7-e374-453d-8b83-74548c892f8b"
          ],
          "failures": [
            "9c0e586b-726c-4d1a-bda4-680c931b721d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5023,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "248c4ed0-d1c2-42dc-afaa-55a6c55c8fd4",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "7f9483ee-5918-45d2-8c90-573bd08f4291",
              "parentUUID": "248c4ed0-d1c2-42dc-afaa-55a6c55c8fd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "cc205a95-0e85-4f87-a10e-464858b13be5",
              "parentUUID": "248c4ed0-d1c2-42dc-afaa-55a6c55c8fd4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f9483ee-5918-45d2-8c90-573bd08f4291",
            "cc205a95-0e85-4f87-a10e-464858b13be5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 253,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "de1bf54b-40d3-4e3d-bba0-0bde87843eda",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "e9a3a313-9ed9-4b0f-b884-6d7db385a191",
              "parentUUID": "de1bf54b-40d3-4e3d-bba0-0bde87843eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "21968a4f-7b4f-4e66-8876-ab08a68c7e12",
              "parentUUID": "de1bf54b-40d3-4e3d-bba0-0bde87843eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "035478d5-10e4-4d2c-bb45-7988a037ea0b",
              "parentUUID": "de1bf54b-40d3-4e3d-bba0-0bde87843eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "493aabb5-7ce3-4c9f-a532-c39a10104407",
              "parentUUID": "de1bf54b-40d3-4e3d-bba0-0bde87843eda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9a3a313-9ed9-4b0f-b884-6d7db385a191",
            "21968a4f-7b4f-4e66-8876-ab08a68c7e12",
            "035478d5-10e4-4d2c-bb45-7988a037ea0b",
            "493aabb5-7ce3-4c9f-a532-c39a10104407"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 477,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c9847a6-6e0e-4fa3-a701-50bc089eb1dd",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 360,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\"></div>",
                "estack": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\"></div>\n    at http://localhost:33277/__cypress/runner/cypress_runner.js:136161:17\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33277/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.shouldFnWithCallback (http://localhost:33277/__cypress/runner/cypress_runner.js:136158:23)\n    at Context.shouldFn (http://localhost:33277/__cypress/runner/cypress_runner.js:136167:35)\n    at Context.and (http://localhost:33277/__cypress/runner/cypress_runner.js:136265:23)\n    at Context.<anonymous> (http://localhost:33277/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33277/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33277/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "8969c962-c0a2-48f7-a1e2-1bc6ddce720b",
              "parentUUID": "4c9847a6-6e0e-4fa3-a701-50bc089eb1dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "e016c4a1-f3e4-4937-8b4a-456a807fea1f",
              "parentUUID": "4c9847a6-6e0e-4fa3-a701-50bc089eb1dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e016c4a1-f3e4-4937-8b4a-456a807fea1f"
          ],
          "failures": [
            "8969c962-c0a2-48f7-a1e2-1bc6ddce720b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 618,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fd932616-791a-43b7-8fdc-4964210e2aa9",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "835a68ba-0938-4803-a4a5-5e20d4a63e0d",
              "parentUUID": "fd932616-791a-43b7-8fdc-4964210e2aa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "ae0886b0-2e11-410d-9e02-e8a589f8ece9",
              "parentUUID": "fd932616-791a-43b7-8fdc-4964210e2aa9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "835a68ba-0938-4803-a4a5-5e20d4a63e0d",
            "ae0886b0-2e11-410d-9e02-e8a589f8ece9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 173,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "19242c52-6e11-4688-96b5-37c34125650f",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "08a83988-47d4-4bea-b2d6-7ace438df3a2",
              "parentUUID": "19242c52-6e11-4688-96b5-37c34125650f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "d3f93c5b-a180-4dfd-899c-a676e31e5d27",
              "parentUUID": "19242c52-6e11-4688-96b5-37c34125650f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08a83988-47d4-4bea-b2d6-7ace438df3a2",
            "d3f93c5b-a180-4dfd-899c-a676e31e5d27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9396,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2c52cca2-b200-407c-a2f8-843356618ddb",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "83efd01b-83b3-48db-8e2b-c65a9bc8ab25",
              "parentUUID": "2c52cca2-b200-407c-a2f8-843356618ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8948,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "a328ea7d-b5f3-43c3-b4e2-54d5be684a62",
              "parentUUID": "2c52cca2-b200-407c-a2f8-843356618ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "75d731db-4757-4399-a1f1-6d3f0727b4ce",
              "parentUUID": "2c52cca2-b200-407c-a2f8-843356618ddb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83efd01b-83b3-48db-8e2b-c65a9bc8ab25",
            "a328ea7d-b5f3-43c3-b4e2-54d5be684a62",
            "75d731db-4757-4399-a1f1-6d3f0727b4ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12536,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b064100-844d-4492-86db-76b5a0291e53",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "3d4e34ee-301e-4b85-8c90-23e2f013d043",
              "parentUUID": "6b064100-844d-4492-86db-76b5a0291e53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "157fd6b3-3bc4-493f-90c2-2aaac59e6d63",
              "parentUUID": "6b064100-844d-4492-86db-76b5a0291e53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "4b4d1c09-1722-42ee-8645-b5a42fe46fd4",
              "parentUUID": "6b064100-844d-4492-86db-76b5a0291e53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "b46ca2b1-0939-411d-8910-e4d1a6a8bbc8",
              "parentUUID": "6b064100-844d-4492-86db-76b5a0291e53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d4e34ee-301e-4b85-8c90-23e2f013d043",
            "157fd6b3-3bc4-493f-90c2-2aaac59e6d63",
            "4b4d1c09-1722-42ee-8645-b5a42fe46fd4",
            "b46ca2b1-0939-411d-8910-e4d1a6a8bbc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2739,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "370d2314-82ca-4f64-810f-c5e75b7d3690",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "62dd114c-4624-4c1d-baa1-4b36951ba9b0",
              "parentUUID": "370d2314-82ca-4f64-810f-c5e75b7d3690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "2ce35f2a-c57e-4c77-88cc-8a0990b5f51b",
              "parentUUID": "370d2314-82ca-4f64-810f-c5e75b7d3690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4294,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33277/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33277/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33277/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33277/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33277/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "451243ee-cfa0-46ca-a028-9a6aaaddc842",
              "parentUUID": "370d2314-82ca-4f64-810f-c5e75b7d3690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "c267bd20-9b17-4c7a-a3b8-11fa6567767b",
              "parentUUID": "370d2314-82ca-4f64-810f-c5e75b7d3690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "ea1b63d0-134b-42d9-866e-58e0e3c12fa3",
              "parentUUID": "370d2314-82ca-4f64-810f-c5e75b7d3690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "8ebc59b0-7a61-40a4-a61c-bc889ce9e71a",
              "parentUUID": "370d2314-82ca-4f64-810f-c5e75b7d3690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:33277/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33277/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33277/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33277/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33277/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33277/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33277/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7fad0cd8-d709-4fe3-94bd-0467bfa03b63",
              "parentUUID": "370d2314-82ca-4f64-810f-c5e75b7d3690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4572,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33277/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33277/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33277/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33277/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33277/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d59d7913-47e4-45e4-b7cb-8fdb34062e0a",
              "parentUUID": "370d2314-82ca-4f64-810f-c5e75b7d3690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4606,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33277/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33277/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33277/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33277/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33277/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2369766e-8deb-47a7-94d8-f2273a682126",
              "parentUUID": "370d2314-82ca-4f64-810f-c5e75b7d3690",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62dd114c-4624-4c1d-baa1-4b36951ba9b0",
            "2ce35f2a-c57e-4c77-88cc-8a0990b5f51b",
            "c267bd20-9b17-4c7a-a3b8-11fa6567767b",
            "ea1b63d0-134b-42d9-866e-58e0e3c12fa3",
            "8ebc59b0-7a61-40a4-a61c-bc889ce9e71a"
          ],
          "failures": [
            "451243ee-cfa0-46ca-a028-9a6aaaddc842",
            "7fad0cd8-d709-4fe3-94bd-0467bfa03b63",
            "d59d7913-47e4-45e4-b7cb-8fdb34062e0a",
            "2369766e-8deb-47a7-94d8-f2273a682126"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14333,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "259e7f4c-f42f-48d4-93b4-cb486faa2def",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4662,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33277/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33277/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33277/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33277/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33277/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8556ccd6-9ad9-400c-9d91-9adcd4a743f8",
              "parentUUID": "259e7f4c-f42f-48d4-93b4-cb486faa2def",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "4ccb72ea-193b-4290-8ba1-5ab1607cbf71",
              "parentUUID": "259e7f4c-f42f-48d4-93b4-cb486faa2def",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4695,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33277/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33277/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33277/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33277/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33277/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33277/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f29e78eb-1314-4627-8726-df9536cbf695",
              "parentUUID": "259e7f4c-f42f-48d4-93b4-cb486faa2def",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ccb72ea-193b-4290-8ba1-5ab1607cbf71"
          ],
          "failures": [
            "8556ccd6-9ad9-400c-9d91-9adcd4a743f8",
            "f29e78eb-1314-4627-8726-df9536cbf695"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9868,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "26ad973f-408d-4ac5-9a21-75fb3704b157",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 409,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33277/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33277/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33277/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33277/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33277/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33277/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33277/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7960f28a-f93b-4cd9-9695-666819e6fb95",
              "parentUUID": "26ad973f-408d-4ac5-9a21-75fb3704b157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 361,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33277/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33277/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33277/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33277/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33277/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33277/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33277/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33277/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33277/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33277/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33277/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33277/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "4cbe465c-bfbe-4106-be2e-ed106346ce5f",
              "parentUUID": "26ad973f-408d-4ac5-9a21-75fb3704b157",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7960f28a-f93b-4cd9-9695-666819e6fb95",
            "4cbe465c-bfbe-4106-be2e-ed106346ce5f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 770,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}