{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 31,
    "pending": 0,
    "failures": 10,
    "start": "2022-02-21T12:34:33.928Z",
    "end": "2022-02-21T12:35:31.405Z",
    "duration": 57477,
    "testsRegistered": 41,
    "passPercent": 75.60975609756098,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e033224d-4eab-4965-89f0-001cce279bdc",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67f4cdc5-8549-46e0-85d0-c8d481e65968",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "4bf05ed1-3924-49a3-8eb2-306983d51391",
              "parentUUID": "67f4cdc5-8549-46e0-85d0-c8d481e65968",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4bf05ed1-3924-49a3-8eb2-306983d51391"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 178,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "52674813-e5f3-4e47-8f5d-3af5fc7bb7ad",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "d94bd87a-0ac2-45e8-a519-9290752ea021",
              "parentUUID": "52674813-e5f3-4e47-8f5d-3af5fc7bb7ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "0bab1d69-8d43-4c34-af4c-57022f383ef1",
              "parentUUID": "52674813-e5f3-4e47-8f5d-3af5fc7bb7ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "c79839ce-b4ae-45cc-bf8b-d00089544e91",
              "parentUUID": "52674813-e5f3-4e47-8f5d-3af5fc7bb7ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 4267,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.color.selected>' to have CSS property 'border' with the value '1px solid rgb(0, 0, 0)', but the value was '1px solid rgb(252, 250, 250)'",
                "estack": "CypressError: Timed out retrying: expected '<div.color.selected>' to have CSS property 'border' with the value '1px solid rgb(0, 0, 0)', but the value was '1px solid rgb(252, 250, 250)'\n    at cypressErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37985/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37985/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37985/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37985/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37985/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dc76aade-7e87-4310-9de1-2fd4e33d2a27",
              "parentUUID": "52674813-e5f3-4e47-8f5d-3af5fc7bb7ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "a09c76f3-e4ca-4490-bb98-0f22eda54317",
              "parentUUID": "52674813-e5f3-4e47-8f5d-3af5fc7bb7ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "c4ce891d-8f36-4eb8-9f69-5c00d7873f43",
              "parentUUID": "52674813-e5f3-4e47-8f5d-3af5fc7bb7ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "bb95c095-d524-4ff3-b7db-e2ae1f9406fc",
              "parentUUID": "52674813-e5f3-4e47-8f5d-3af5fc7bb7ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d94bd87a-0ac2-45e8-a519-9290752ea021",
            "0bab1d69-8d43-4c34-af4c-57022f383ef1",
            "c79839ce-b4ae-45cc-bf8b-d00089544e91",
            "a09c76f3-e4ca-4490-bb98-0f22eda54317",
            "c4ce891d-8f36-4eb8-9f69-5c00d7873f43",
            "bb95c095-d524-4ff3-b7db-e2ae1f9406fc"
          ],
          "failures": [
            "dc76aade-7e87-4310-9de1-2fd4e33d2a27"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4940,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be408232-e626-41a6-922c-eb359e003b8d",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "14833613-e9ca-40e0-9adf-79fa4fc1c36c",
              "parentUUID": "be408232-e626-41a6-922c-eb359e003b8d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "1db69244-c337-4914-bcbe-a02d5263dd7b",
              "parentUUID": "be408232-e626-41a6-922c-eb359e003b8d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14833613-e9ca-40e0-9adf-79fa4fc1c36c",
            "1db69244-c337-4914-bcbe-a02d5263dd7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f158ac36-6abe-4c59-abf2-4c591cfe6363",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "a6c35bd5-64e2-455c-8c85-efdb339d7f22",
              "parentUUID": "f158ac36-6abe-4c59-abf2-4c591cfe6363",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a4138757-e697-43d2-9584-8de0e29e4213",
              "parentUUID": "f158ac36-6abe-4c59-abf2-4c591cfe6363",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "13f237a9-dedf-4b26-a8a2-0d2b1f2ef3f0",
              "parentUUID": "f158ac36-6abe-4c59-abf2-4c591cfe6363",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "0ef5f40f-2f22-4c0d-8670-e0898bb891be",
              "parentUUID": "f158ac36-6abe-4c59-abf2-4c591cfe6363",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6c35bd5-64e2-455c-8c85-efdb339d7f22",
            "a4138757-e697-43d2-9584-8de0e29e4213",
            "13f237a9-dedf-4b26-a8a2-0d2b1f2ef3f0",
            "0ef5f40f-2f22-4c0d-8670-e0898bb891be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 373,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b9566df0-8cf9-4ec3-a750-fe3b552ac4f7",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 376,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\"></div>",
                "estack": "AssertionError: expected '<div.pixel>' to be below of <div class=\"pixel\"></div>\n    at http://localhost:37985/__cypress/runner/cypress_runner.js:136161:17\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37985/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.shouldFnWithCallback (http://localhost:37985/__cypress/runner/cypress_runner.js:136158:23)\n    at Context.shouldFn (http://localhost:37985/__cypress/runner/cypress_runner.js:136167:35)\n    at Context.and (http://localhost:37985/__cypress/runner/cypress_runner.js:136265:23)\n    at Context.<anonymous> (http://localhost:37985/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37985/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37985/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "5314414a-f58a-4bae-83a5-a51b2ed70c4c",
              "parentUUID": "b9566df0-8cf9-4ec3-a750-fe3b552ac4f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "eb2bd5fa-9e90-4a26-8bb3-26d26fec258f",
              "parentUUID": "b9566df0-8cf9-4ec3-a750-fe3b552ac4f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb2bd5fa-9e90-4a26-8bb3-26d26fec258f"
          ],
          "failures": [
            "5314414a-f58a-4bae-83a5-a51b2ed70c4c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 712,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ecbbbf6d-e95d-4bd2-9314-aec8577c87fd",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d5760403-cd3f-4846-99a5-dce38c322075",
              "parentUUID": "ecbbbf6d-e95d-4bd2-9314-aec8577c87fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "1419f510-90d0-4aa5-be16-e53abcba810b",
              "parentUUID": "ecbbbf6d-e95d-4bd2-9314-aec8577c87fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5760403-cd3f-4846-99a5-dce38c322075",
            "1419f510-90d0-4aa5-be16-e53abcba810b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7da1efac-5869-45bb-9cc4-6fec5196548c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "4eb53655-c5b1-47fc-a712-1b00033f8641",
              "parentUUID": "7da1efac-5869-45bb-9cc4-6fec5196548c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "2a16c823-3598-41cb-ba07-8017ec6be06f",
              "parentUUID": "7da1efac-5869-45bb-9cc4-6fec5196548c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4eb53655-c5b1-47fc-a712-1b00033f8641",
            "2a16c823-3598-41cb-ba07-8017ec6be06f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9707,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ada14767-47fa-4feb-922c-4ea8cc93b08d",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "4baf3664-2471-46aa-ad5d-e265ddc0b7a3",
              "parentUUID": "ada14767-47fa-4feb-922c-4ea8cc93b08d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9077,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "3832070f-319b-4fb8-a43a-57e235fce05e",
              "parentUUID": "ada14767-47fa-4feb-922c-4ea8cc93b08d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "70a34e21-d00d-437e-8e5e-4730b9cad7d0",
              "parentUUID": "ada14767-47fa-4feb-922c-4ea8cc93b08d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4baf3664-2471-46aa-ad5d-e265ddc0b7a3",
            "3832070f-319b-4fb8-a43a-57e235fce05e",
            "70a34e21-d00d-437e-8e5e-4730b9cad7d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12638,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3b3f5637-5191-4fb9-baac-6c227e360ab1",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "61589ab6-521e-43ab-8ff1-bdfcb7562dab",
              "parentUUID": "3b3f5637-5191-4fb9-baac-6c227e360ab1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "0b56a292-fb9f-43b1-b8c5-1cfaa14b239e",
              "parentUUID": "3b3f5637-5191-4fb9-baac-6c227e360ab1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "6f57717d-0167-41af-a6a2-dd185268c189",
              "parentUUID": "3b3f5637-5191-4fb9-baac-6c227e360ab1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "9c6853cf-de9c-4474-8199-75530993f509",
              "parentUUID": "3b3f5637-5191-4fb9-baac-6c227e360ab1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61589ab6-521e-43ab-8ff1-bdfcb7562dab",
            "0b56a292-fb9f-43b1-b8c5-1cfaa14b239e",
            "6f57717d-0167-41af-a6a2-dd185268c189",
            "9c6853cf-de9c-4474-8199-75530993f509"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2685,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d25cb91f-6886-43ec-8399-fdafda774243",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "fc0730ca-3bcf-42ca-aa74-ec79f08495ea",
              "parentUUID": "d25cb91f-6886-43ec-8399-fdafda774243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "1082a39d-fe01-40ab-80f0-fb7b0878d606",
              "parentUUID": "d25cb91f-6886-43ec-8399-fdafda774243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37985/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37985/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37985/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37985/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37985/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f113fc24-322b-4fb3-b9dc-1fe72c88df74",
              "parentUUID": "d25cb91f-6886-43ec-8399-fdafda774243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "0efc3035-8042-45ed-9e2b-0cf325512f4b",
              "parentUUID": "d25cb91f-6886-43ec-8399-fdafda774243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "fc8202a6-bc1e-4dc2-8c6d-96b3897c63b7",
              "parentUUID": "d25cb91f-6886-43ec-8399-fdafda774243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "1c67d515-de6b-4977-a644-c1f2d6951e77",
              "parentUUID": "d25cb91f-6886-43ec-8399-fdafda774243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 296,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:37985/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37985/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37985/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37985/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37985/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37985/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37985/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "89c75e6e-3c7e-43cb-b9d3-60dcfc5ad9bf",
              "parentUUID": "d25cb91f-6886-43ec-8399-fdafda774243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4636,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37985/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37985/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37985/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37985/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37985/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8331977a-8656-431b-a374-1ddbdbf30ff2",
              "parentUUID": "d25cb91f-6886-43ec-8399-fdafda774243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4642,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37985/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37985/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37985/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37985/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37985/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ed6580d1-ca3b-49fd-a277-9ab73be8b0bb",
              "parentUUID": "d25cb91f-6886-43ec-8399-fdafda774243",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc0730ca-3bcf-42ca-aa74-ec79f08495ea",
            "1082a39d-fe01-40ab-80f0-fb7b0878d606",
            "0efc3035-8042-45ed-9e2b-0cf325512f4b",
            "fc8202a6-bc1e-4dc2-8c6d-96b3897c63b7",
            "1c67d515-de6b-4977-a644-c1f2d6951e77"
          ],
          "failures": [
            "f113fc24-322b-4fb3-b9dc-1fe72c88df74",
            "89c75e6e-3c7e-43cb-b9d3-60dcfc5ad9bf",
            "8331977a-8656-431b-a374-1ddbdbf30ff2",
            "ed6580d1-ca3b-49fd-a277-9ab73be8b0bb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14399,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "33c783e7-036c-40d9-908e-9f6126a65998",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4612,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37985/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37985/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37985/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37985/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37985/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f2b1b62f-7b91-454c-a720-ce65d39b1d2a",
              "parentUUID": "33c783e7-036c-40d9-908e-9f6126a65998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "73665d46-c8e1-4ebd-977e-31ad847c5d1e",
              "parentUUID": "33c783e7-036c-40d9-908e-9f6126a65998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4625,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37985/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37985/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37985/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37985/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37985/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37985/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4ec7b91f-ab16-4083-9d0d-2ac11bfce9cc",
              "parentUUID": "33c783e7-036c-40d9-908e-9f6126a65998",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73665d46-c8e1-4ebd-977e-31ad847c5d1e"
          ],
          "failures": [
            "f2b1b62f-7b91-454c-a720-ce65d39b1d2a",
            "4ec7b91f-ab16-4083-9d0d-2ac11bfce9cc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9757,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "90473601-fa59-49d8-891c-8166a40268f5",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 385,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37985/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37985/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37985/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37985/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37985/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37985/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37985/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7197da83-062a-4a88-9c59-2c6145db7575",
              "parentUUID": "90473601-fa59-49d8-891c-8166a40268f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 348,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37985/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37985/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37985/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37985/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37985/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37985/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37985/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37985/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37985/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37985/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37985/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37985/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "1aa89fc8-6fc6-4c29-9620-e3973ad97d3c",
              "parentUUID": "90473601-fa59-49d8-891c-8166a40268f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7197da83-062a-4a88-9c59-2c6145db7575",
            "1aa89fc8-6fc6-4c29-9620-e3973ad97d3c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 733,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}